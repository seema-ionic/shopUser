{"version":3,"sources":["webpack:///src/app/imageCapture/uploading.service.ts"],"names":["UploadingService","zone","platform","sanitizer","toastController","camera","imagePicker","transfer","file","actionSheetController","apiService","storageService","mediaCapture","videoEditor","storage","crop","videoProgressPercentage","tempArraay","console","log","fileTransfer","create","getStorage","then","res","allStorageData","sourceType","getData","previousData","imageTakeFrom","PictureSourceType","CAMERA","PHOTOLIBRARY","options","quality","allowEdit","cameraDirection","correctOrientation","destinationType","DestinationType","FILE_URI","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","JSON","stringify","getPicture","imagePath","path","substring","lastIndexOf","pickedImage","option","targetHeight","targetWidth","newImage","error","DATA_URL","base64Image","imageCount","maximumImagesCount","outputType","getPictures","results","err","mediaValue","VIDEO","imageData","showToastMessage","limit","duration","captureVideo","videodata","currentName","fullPath","imagepass","d","Date","captureInfo","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","fileUri","atTime","outputFileName","createThumbnail","tempCreatethumbnail","filePath","fileName","split","pop","readAsDataURL","b64Str","dataArray","sendingImgRes","url","baseUrl","myheaders","Headers","append","loginApiRes","login_token","i","targetPath","media","name","length","media_type","thumbnail","filekey","chunkdMode","mimeType","headers","params","flag_type","clientId","appVersion","device","deviceId","user_id","onProgress","progressEvent","run","loaded","progressPercentage","total","toFixed","upload","serverImgProcess","data","parse","response","success","previewImage","positionInd","push","message","storegeVal","mediaTypeValue","tempURL","uploadImage","indexOf","removeExtraDataFromFileName","mediaPath","client_Id","packageName","module","status","msg","toast","present","providedIn"],"mappings":"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","file":"default~LoginModuleNew-upload-profile-picture-upload-profile-picture-module~contactus-contactus-modu~89f063b2-es5.js","sourcesContent":["import { Injectable, NgZone } from \"@angular/core\";\nimport { of, throwError, from } from \"rxjs\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { mergeMap } from \"rxjs/operators\";\nimport { ImagePicker } from \"@ionic-native/image-picker/ngx\";\nimport { ActionSheetController, Platform, ToastController } from \"@ionic/angular\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { Camera, CameraOptions } from \"@ionic-native/camera/ngx\";\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { URLS, APP_CONFIG } from \"../../assets/constant\";\nimport { ApiservicesService } from \"../provider/apiservices.service\";\nimport { LocalStorageService } from \"../services/local-storage.service\";\nimport { MediaCapture, CaptureVideoOptions } from \"@ionic-native/media-capture/ngx\";\nimport { VideoEditor, CreateThumbnailOptions } from '@ionic-native/video-editor/ngx';\nimport { Storage } from \"@ionic/storage\";\nimport { Crop } from '@ionic-native/crop/ngx';\n\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class UploadingService{\n\n  fileTransfer:FileTransferObject;\n  previousData:any;\n  allStorageData:any;\n  mediaTypeValue:any;\n  videoProgressPercentage:number=0;\n  currentName:any;\n  tempArraay:any=[];\n  contentType:any;\n  deviceId:any;\n\n  constructor(private zone:NgZone,private platform:Platform,private sanitizer:DomSanitizer,\n    public toastController:ToastController,private camera:Camera,private imagePicker:ImagePicker,\n    private transfer:FileTransfer,private file:File,public actionSheetController:ActionSheetController,\n    private apiService:ApiservicesService,private storageService:LocalStorageService,    \n    private mediaCapture:MediaCapture,private videoEditor:VideoEditor,private storage:Storage,\n    private crop:Crop) {      \n\n    console.log(\"upload image service==\");\n    // this.storageService.getStorage().then(res=>{\n    //   this.allStorageData=res;\n    //   console.log('all Storage Data===',res);\n    // });\n    this.fileTransfer= this.transfer.create();\n\n  }\n\n\n\n\n\n\n\n\n\n  ionViewDidEnter(){\n    console.log(\"all Storage Data0==\");\n    this.storageService.getStorage().then(res=>{\n      console.log(\"all Storage Data1 upload image on server0==\",res);\n      this.allStorageData=res;\n      console.log(\"all Storage Data2 upload image on server0==\",this.allStorageData);\n    });\n  }\n\n  public captureImage(sourceType, getData){\n    // getData is used for get flag_type\n    console.log(\"previous Page Data==\", getData);\n    this.previousData=getData;\n    var imageTakeFrom;\n    if (sourceType == \"camera\") {\n      imageTakeFrom = this.camera.PictureSourceType.CAMERA;\n    } else {\n      imageTakeFrom = this.camera.PictureSourceType.PHOTOLIBRARY;\n    }\n    const options: CameraOptions = {\n      quality: 40,\n      allowEdit: false,\n      // saveToPhotoAlbum: false,\n      cameraDirection: 1,\n      correctOrientation: true,\n      destinationType: this.camera.DestinationType.FILE_URI,\n      sourceType: imageTakeFrom,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    console.log(\"inside captureImage function==>options==\", options);\n    console.log(\"inside captureImage function==>options==\", JSON.stringify(options));\n    return this.camera.getPicture(options).then((imagePath) => {\n      console.log(\"imagePath==\", imagePath);\n      // let fileName = imagePath.split(\"jpg\").pop();\n      // console.log(\"imagePath fileName123==> \", fileName);\n      let path = imagePath.substring(0, imagePath.lastIndexOf(\"g\") + 1);\n      console.log(\"imagePath path123==\", path);\n      return path;\n      // return imagePath;\n    });\n  }\n\n  public cropImage(pickedImage){\n    console.log(\"get pickedImage form cam/gal==\",pickedImage);  \n    let option={quality: 75,targetHeight:1000,targetWidth:1000};\n    return this.crop.crop(pickedImage[0],option).then( newImage =>{ \n      console.log(\"get new image path cropped==\", newImage);\n      return newImage;\n    },error => {\n      console.error(\"get Cropping Image Error==\", error)  \n    });\n  }\n\n  public base64Function(sourceType, getData){\n    // getData is used for get flag_type\n    console.log(\"previous Page Data==\", getData);\n    this.previousData=getData;\n    var imageTakeFrom;\n    if (sourceType == \"camera\") {\n      imageTakeFrom = this.camera.PictureSourceType.CAMERA;\n    } else {\n      imageTakeFrom = this.camera.PictureSourceType.PHOTOLIBRARY;\n    }\n    const options: CameraOptions = {\n      quality: 40,\n      allowEdit: false,\n      // saveToPhotoAlbum: false,\n      cameraDirection: 1,\n      correctOrientation: true,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      sourceType: imageTakeFrom,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n    };\n    console.log(\"inside captureImage function==>options==\", options);\n    console.log(\"inside captureImage function==>options==\", JSON.stringify(options));\n    return this.camera.getPicture(options).then((imagePath) => {\n      console.log(\"imagePath*** ==> \", imagePath);\n      let path = imagePath.substring(0, imagePath.lastIndexOf(\"g\") + 1);\n      console.log(\"imagePath path123==\", path);\n      let base64Image = \"data:image/jpeg;base64,\"+imagePath;\n      return base64Image;\n    });\n  }\n  \n  public selectMultiImage(imageCount,getData){\n    console.log(\"previous Page Data==\", getData);\n    this.previousData=getData;\n    const options = {\n      maximumImagesCount : imageCount,\n      quality : 40,\n      outputType : 0,\n    };\n    return this.imagePicker.getPictures(options).then((results) => {\n      console.log(\"imagePath multiple image==\", results);\n      if(results!=\"OK\"){\n        return results\n      }\n    },(err) => {\n      console.log(\"image picker multiple image==\", err);\n    });\n  }\n\n  public pickVideoFromGallery(mediaValue,getData){\n    console.log(\"pick video Page Data==\", getData);\n    this.previousData=getData;\n    var mediaType;\n    if(mediaValue==\"video\"){\n      mediaType=\"2\";\n    }\n    console.log(\"this. is gallery video function==\");\n    const options = {\n      quality : 20,\n      destinationType : this.camera.DestinationType.FILE_URI,\n      sourceType : mediaType,\n      mediaType : this.camera.MediaType.VIDEO,\n    };\n    console.log(\"this is gallery video options==\", options);\n    return this.camera.getPicture(options).then( (imageData) => {\n      console.log(\"pick video from gallery result==\", imageData);\n      if(imageData!=\"OK\"){\n        return imageData\n      }\n    },(err) => {\n      this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n      console.log(\"pick video error==\", err);\n    });\n  }\n\n  public captureVideo(mediaValue,getData){\n    console.log(\"capture video Page Data==\", getData);\n    this.previousData=getData;\n    var mediaType;\n    if(mediaValue==\"video\"){\n      mediaType='2';\n    }\n    var imageTakeFrom;\n    imageTakeFrom = this.camera.PictureSourceType.CAMERA;\n    console.log(\"this is camera vedio function==\");\n    let options: CaptureVideoOptions = { limit : 1, duration : 60 };\n    console.log(\"this is camera vedio options==\", options);\n    return this.mediaCapture.captureVideo(options).then((videodata) => {\n      this.currentName = videodata[0].fullPath;\n      console.log(\"current name of video captured by camera==\", this.currentName);\n      return videodata[0].fullPath;\n      // if(this.currentName!=''){\n      //   return videodata[0].fullPath;\n      // }\n    },(err)=>{\n      this.apiService.showToastMessage(JSON.stringify(err), 'top', 3000, 'redBg');\n      console.log(\"capture video error==\", err);\n    });\n  }\n\n  async createThumbnail(imagepass){\n    console.log(\"video path==\",imagepass  );\n    var d = new Date();\n    var captureInfo = d.getDate()+\"-\"+d.getMonth()+\"-\"+d.getFullYear()+\"-\"+d.getHours()+\"-\"+d.getMinutes()+\"-\"+d.getSeconds();\n    const options:CreateThumbnailOptions={\n      fileUri: imagepass,\n      quality: 50,\n      atTime: 0.5, //second\n      outputFileName:\"Yorker\"+captureInfo,\n    };\n    const tempCreatethumbnail=await this.videoEditor.createThumbnail(options);\n    console.log(\"tempCreatethumbnail==\", tempCreatethumbnail);\n    if(tempCreatethumbnail!=''){\n      // file uri to base 64 convert\n      let filePath: string = \"file://\"+tempCreatethumbnail;\n      // split file path to directory and file name\n      let fileName = filePath.split(\"/\").pop();\n      let path = filePath.substring(0, filePath.lastIndexOf(\"/\") + 1);\n      console.log(\"here is encoded fileName==\", fileName);\n      console.log(\"here is encoded path==\", path);\n      const b64Str=await this.file.readAsDataURL(path, fileName);\n      console.log(\"b64Str==\", b64Str);\n      return b64Str;\n    }\n  }\n\n  async videoImageUpload(dataArray){\n    let options;\n    this.allStorageData=await this.storageService.getStorage();\n    console.log(\"stored data==\", this.allStorageData);\n    console.log(\"dataArray==\", dataArray);\n    var sendingImgRes=[];\n    console.log(\"data for upload==\", dataArray);\n    var url = URLS.baseUrl+'uploadImage';\n    let myheaders = new Headers();\n    myheaders.append('Content-Type', 'application/json');\n    myheaders.append('Authorization', this.allStorageData.loginApiRes.login_token);\n    for(let i=0; i<=dataArray.length;i++){\n      console.log(\"path==\", dataArray[i]);\n      let targetPath = dataArray[i].media;\n      let currentName = dataArray[i].media;\n      let name =  dataArray[i].media.split(\"/\");\n      let fileName = name[name.length - 1]; \n      if(dataArray[i].media_type==2){\n        //for video:- create thumbnail\n        dataArray[i].thumbnail=await this.createThumbnail(dataArray[i].media);  \n         options ={\n          filekey:\"image\",\n          fileName:fileName,\n          chunkdMode:false,\n          mimeType:\"multipart/form-data\",\n          headers:{\"Authorization\":this.allStorageData.loginApiRes.login_token},\n          params:{\n            \"image\":targetPath,\n            \"flag\":this.previousData.flag_type,\n            \"client_id\":APP_CONFIG.clientId,\n            \"app_version\":APP_CONFIG.appVersion,\n            \"device\":this.apiService.device,\n            \"device_id\":this.allStorageData.deviceId,\n            \"user_id\":this.allStorageData.loginApiRes.user_id,\n            \"media_type\":dataArray[i].media_type, \n            \"thumb_image\":dataArray[i].thumbnail\n          }\n        }\n        console.log(\"passing key video==\", JSON.stringify(options));\n      }else{\n        //for image \n         options ={\n          filekey:\"image\",\n          fileName:fileName,\n          chunkdMode:false,\n          mimeType:\"multipart/form-data\",\n          headers:{\"Authorization\":this.allStorageData.loginApiRes.login_token},\n          params:{\n            \"image\":targetPath,\n            \"flag\":this.previousData.flag_type,\n            \"client_id\":APP_CONFIG.clientId,\n            \"app_version\":APP_CONFIG.appVersion,\n            \"device\":this.apiService.device,\n            \"device_id\":this.allStorageData.deviceId,\n            \"user_id\":this.allStorageData.loginApiRes.user_id,\n            \"media_type\":dataArray[i].media_type, \n            \"thumb_image\":\"\"\n          }\n        }\n        console.log(\"passing key video==\", JSON.stringify(options));\n      }\n      this.fileTransfer.onProgress((progressEvent: ProgressEvent) => { \n        this.zone.run(() => {   \n          console.log(\"progress==\", progressEvent.loaded);\n          dataArray[i].progressPercentage=(progressEvent.loaded*100)/progressEvent.total;\n          this.videoProgressPercentage=dataArray[i].progressPercentage.toFixed(0);\n          console.log(\"progress percentage==\", dataArray[i].progressPercentage);\n          console.log(\"videoProgressPercentage==\", this.videoProgressPercentage);\n          // data.progressPercentage=(progressEvent.loaded*100)/progressEvent.total;\n          // console.log('progress percentage==>', data.progressPercentage);\n        });\n      });  \n      const serverImgProcess = await this.fileTransfer.upload(targetPath, url, options);      \n      console.log(\"serverImgProcess==\", serverImgProcess);\n      let data =JSON.parse(serverImgProcess.response);\n      if(data.success==1){\n        if(dataArray[i].media_type==2){\n          data.previewImage=dataArray[i].thumbnail;\n          data.data.progressPercentage=dataArray[i].progressPercentage;\n        } \n        console.log(\"data video==\", data);\n        data.positionInd=dataArray[i].positionInd;\n        sendingImgRes.push(data);\n        console.log(\"sendingImgRes video/image==\", sendingImgRes);\n        if(i==dataArray.length-1){\n          return sendingImgRes;\n        }\n      }else{\n        this.apiService.showToastMessage(JSON.stringify(data.message), 'top', 3000, 'redBg');\n      }\n    }\n  }\n\n  async uploadImageOnServer(dataArray,mediaType){\n    const storegeVal = await this.storageService.getStorage();\n    console.log(\"storegeVal==\",storegeVal);\n    if(mediaType==\"img\"){\n      this.mediaTypeValue=\"1\";\n    }else if(mediaType==\"video\"){\n      this.mediaTypeValue=\"2\";\n    }else{\n      this.mediaTypeValue=\"3\";\n    }\n    var sendingImgRes=[];\n    console.log(\"data for upload==\", dataArray);\n    var tempURL = URLS.baseUrl+\"v1/uploadmedia\";\n    console.log(\"passing tempURL==\",tempURL);\n    var url = URLS.baseUrl+\"\"+URLS.uploadImage;\n    let myheaders = new Headers();\n    myheaders.append('Content-Type', 'application/json');\n    myheaders.append('Authorization', storegeVal.login_token);\n    for(let i=0; i<=dataArray.length;i++){\n      console.log(\"path==\", dataArray[i]);\n      let targetPath = dataArray[i].media;\n      // let currentName = dataArray[i];\n      let name =  dataArray[i].media.split(\"/\");\n      let fileName = name[name.length - 1];\n      if(fileName.indexOf(\"?\")>=0 && targetPath.indexOf(\"?\")>=0){\n\n        console.log('file path is contain ? fileName==>', fileName);\n        console.log('file path is contain ? targetPath==>', targetPath);\n        var removeExtraDataFromFileName = fileName.substring(0, fileName.indexOf(\"?\"));\n        var mediaPath = targetPath.substring(0, targetPath.indexOf(\"?\"));\n      }else{\n        console.log('file path does not contain ? fileName==>', fileName);\n        console.log('file path does not contain ? targetPath==>', targetPath);\n        var removeExtraDataFromFileName = fileName;\n        var mediaPath = targetPath;\n      }\n      let options ={\n        filekey:\"media\",\n        fileName:removeExtraDataFromFileName,\n        chunkdMode:false,\n        mimeType:\"multipart/form-data\",\n        headers:{\n          \"Authorization\":storegeVal.login_token,\n          \"App-Version\":APP_CONFIG.appVersion,\n          \"Device\":this.apiService.device,\n          \"Device-Id\":storegeVal.deviceId,\n          \"Client-Id\" :storegeVal.client_Id,\n          \"Package-Name\" : APP_CONFIG.packageName,\n        },\n        params:{\n          \"media\":mediaPath,\n          // \"flag\":this.previousData.flag_type,\n          // \"client_id\":APP_CONFIG.clientId,\n          // \"app_version\":APP_CONFIG.appVersion,\n          // \"device\":this.apiService.device,\n          // \"device_id\":storegeVal.deviceId,\n          // \"user_id\":storegeVal.loginApiRes.user_id,\n          // \"media_type\":this.mediaTypeValue\n          \"flag\":this.mediaTypeValue,\n          \"module\":dataArray[i].module,\n        }\n      }\n      console.log(\"passing key==\", JSON.stringify(options));\n      console.log(\"passing url==\", url);\n      console.log(\"passing mediaPath==\", mediaPath);\n      const serverImgProcess = await  this.fileTransfer.upload(mediaPath, url, options);\n      console.log(\"serverImgProcess temp==\", serverImgProcess);\n      let data =JSON.parse(serverImgProcess.response);\n      console.log(\"serverImgProcess data==\", data);\n      if(data.status==1){\n        console.log(\"serverImgProcess final==\", data);\n        sendingImgRes.push(data);\n        console.log(\"serverImgProcess push==\", sendingImgRes);\n        if(i==dataArray.length-1){\n          return sendingImgRes;\n        }\n      }else{\n        this.apiService.showToastMessage(JSON.stringify(data.message), 'top', 3000, 'greenBg');\n      }\n    }\n  }\n\n  async presentToast(msg){\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n\n\n\n\n\n\n  \n}"]}